<?php

/**
 * Implements hook_init();
 */
function atwork_zen_specific_init() {
  global $user;

  if (isset($_GET['display']) && in_array($_GET['display'], array('atwork', 'atwork_zen')) && isset($user->uid) && $user->uid) {
    $user = user_load($user->uid);

    $user->theme = $_GET['display'];

    user_save($user);

    drupal_goto(current_path());
  }
}



/*
 * Implements hook_views_pre_view();
 */
function atwork_zen_specific_views_pre_view(&$view, &$display_id, &$args) {
  global $user;

  if($view->name == 'term_landing_page' && $view->current_display == 'page') {
    if ($user->theme && $user->theme == 'atwork'){
      drupal_goto('/tax/term/' . $view->args[0]);
    }
  }


  if ($view->name == 'e_cards' && $view->current_display == 'page') {

    if ($user->theme == 'atwork_zen') {
      //$view->display['page']->display_options['arguments']['term_node_tid_depth']['default_action'] = 'ignore';

      // set all to override empty results behaviour
      if (!isset($view->args[0])) {
        $view->args[0] = 'all';
      }

      // now clear stupid header used on other theme
      $options = array(
        'id' => 'area',
        'table' => 'views',
        'field' => 'area',
        'empty' => FALSE,
        'content' => '',
        'format' => 'full_html',
        'tokenize' => 0,
      );
      $view->display_handler->set_option('header', array('text' => $options));
    }
  }

  // new theme calls for 4 items instead of 5, do this instead of creating 3 new views/blocks
  if ($view->name == 'classifieds' && ($view->current_display == 'block_1' || $view->current_display == 'block_2' || $view->current_display == 'block_3')) {
    global $user;

    if ($user->theme == 'atwork_zen') {
      $view->set_items_per_page(4);
    }
  }
}

/**
 * Implements hook_block_view_alter();
 * This is for classic site - hide other group options from regular users.
 */
function atwork_zen_specific_block_view_alter(&$data, $block) {
  global $user;
  global $theme;

  if (!isset($user->theme)) {
    return;
  }

  if($block->delta == 'og_single_menu_block' && $user->theme == 'atwork'){
    //dpm($data);
    if(isset($data['content'])){
      $current_menu = $data['content']['atwork_menu']['#markup'];
      $full_menu = array();
      preg_match('(^<li class(.*)>(.*)Blog(.*)</li>)', $current_menu, $preg_match_list);
      foreach($preg_match_list as $k){
        if(strpos($k, "Blogs") !== false){
          $x = $k;
        }
      }
      if (isset($x)) {
        $data['content']['atwork_menu']['#markup'] = $x;
      }
    }
  }

  if (isset($user->theme) && $user->theme !='atwork_zen') {
    return;
  }

  if ($block->module == 'atwork_classifieds' && $block->delta == 'categories') {
    drupal_add_js(drupal_get_path('theme', 'atwork_zen') . '/js/jquery.easyListSplitter.js');
    $js = <<<EOT
(function($) {
  $(document).ready(function() {
    $('#block-atwork-classifieds-categories ul').easyListSplitter({
      colNumber: 3,
      direction: 'vertical'
    });
  });
})(jQuery);
EOT;

      drupal_add_js($js, 'inline');

  }

}




/*
 * Implementation of hook_block_info()
 *
 * Providing a theme-switching block
 *
 */
function atwork_zen_specific_block_info() {
  $blocks['switch_theme'] = array(
    'info' => t('Switch Theme'),
    'visibility' => BLOCK_VISIBILITY_LISTED,
  );

  return $blocks;
}

/*
 * Implementation of hook_block_view()
 *
 * Providing a theme-switching block
 *
 */
function atwork_zen_specific_block_view($delta = '') {
  // This example is adapted from node.module.
  $block = array();
  global $user;
  switch ($delta) {
    case 'switch_theme':
      global $user;


      if ($user->theme == 'atwork_zen') {
        $link = l(t('Atwork Classic'), current_path(), array('query' => array('display' => 'atwork')));
      }
      else {
        $link = l(t('Atwork Beta'), current_path(), array('query' => array('display' => 'atwork_zen')));
      }

      $block['subject'] = '';
      $block['content'] = array(
        '#markup' => t('Switch theme to !link', array('!link' => $link)),
      );
      break;
  }
  return $block;
}

/**
 * Implements hook_views_pre_render()
 *
 * Change title to author on employee submitted photo's on the front page
 *
 */
function atwork_zen_views_pre_render(&$view) {
  global $user;
  if ($view->name == 'gallery_reference' && $view->current_display == 'block_2'){

    foreach($view->result as $result){
      $author = user_load($result->users_node_uid);
      $name = _atwork_full_name($author);
      $result->field_field_image[0]['rendered']['#item']['title'] = 'Photo by ' . $name;
    }
  }
    // Additional changes for the titles/links on teh home page blocks (3 top spots)
  if($view->name == 'home_page_blocks_zen' && ($view->current_display == 'block_1' || $view->current_display == 'block_4' || $view->current_display == 'block_3' || $view->current_display == 'block_8')){
    if (isset($view->result[0]->node_type)){
      switch($view->result[0]->node_type) {
        case 'article':
          if(isset($view->result[0]->_field_data['nid']['entity']->field_poll) && $view->result[0] ->_field_data['nid']['entity']->field_poll){
            $view->result[0]->node_type = "polls";
          } elseif (isset($view->result[0]->_field_data['nid']['entity']->field_video) && $view->result[0]->_field_data['nid']['entity']->field_video) {
            $view->result[0]->node_type = "videos";
          } elseif(isset($view->result[0]->_field_data['nid']['entity']->field_tags) && $view->result[0]->_field_data['nid']['entity']->field_tags){
            $view->result[0]->node_type = "articles";
            foreach($view->result[0]->_field_data['nid']['entity']->field_tags['und'] as $k){
              if($k['tid'] == 523){
                $view->result[0]->node_type = "executive updates";
              }
            }
          } else {
            $view->result[0]->node_type = "articles";
          }
         break;
        case 'section':
          $view->result[0]->node_type = "groups";
          break;
        case 'blog':
          $view->result[0]->node_type = "blogs";
          break;
        case 'event':
          $view->result[0]->node_type = "events";
          break;
        case 'gallery':
          $view->result[0]->node_type = "galleries";
          break;
        default:
          //dpm($view->result[0]->node_type);
          return;
      }
    }
  }
}



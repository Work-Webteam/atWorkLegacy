<?php

/*
 * Implementation of hook_form_alter()
 *
 * Add a very simple checkbox to subscribe to the thread (with default subscription settings)
 *
 */
function atwork_comments_form_alter(&$form, &$form_state, $form_id) {

  if ($form['#id'] == 'comment-form' && !$form['cid']['#value']) {
    global $user;

    $comment_terms = variable_get('atwork_comment_terms','');

    $form['actions']['submit']['#value'] = t('Post');
    $form['actions']['submit']['#prefix'] = $comment_terms['value'];
    // add subscrible checkbox
    $form['atwork_subscribe'] = array(
      '#type' => 'checkbox',
      '#title' => variable_get('atwork_comment_subscription_text',''),
    );
    $autosub_on_comment = _subscriptions_get_setting('autosub_on_comment', $user);
    $sid = subscriptions_get_subscription($GLOBALS['user']->uid, 'node', 'nid', $form['nid']['#value']);
    if ($sid || $autosub_on_comment) {
      $form['atwork_subscribe']['#default_value'] = 1;
    }
    // add employee news checkbox
    if (user_access('administer comments')) {
      $form['post_as_en'] = array(
        '#type' => 'checkbox',
        '#title' => t('Post as Employee News.'),
      );
    }
    // add Pension BC checkbox
    if(user_access('administer comments')){
      $form['post_as_pensions'] = array(
        '#type' => 'checkbox',
        '#title' => t('Post as Pensions BC'),
      );
    }
    $form['#submit'][] = 'atwork_comment_form_submit';
  }
}


/*
 * Implementation of hook_comment_presave()
 *
 * Let administators post as emplyeenews.
 */
function atwork_comments_comment_presave($comment) {
  if (user_access('administer comments') && isset($comment->post_as_en) && $comment->post_as_en) {
    $comment->name = '';
    $comment->uid = 0;
    $comment->is_anonymous = TRUE;
  }
  if(user_access('administer comments') && isset($comment->post_as_pensions) && $comment->post_as_pensions){
    $comment->name = 'Pensions BC';
    // TODO: THis will need to be changed to Pensions UID after it is created on @Work
    $comment->uid = 91190;
    $comment->is_anonymous = FALSE;
  }
}

/*
 * Implementation of hook_preprocess_comment()
 *
 * Remove title, picture and permalink from comments
 *
 * Add comment links
 *
 * Remove reply links (advanced adds it hard-coded)
 *
 */
function atwork_comments_preprocess_comment(&$variables){
  //$variables['title'] = '';
  //$variables['permalink'] = '';
  //$variables['picture'] = '';
  if(isset($variables['permalink'])){
    $variables['permalink'] = str_replace(">Permalink</a>", ">Comment URL</a>", $variables['permalink']);
  }
  //dpm($variables);
}

/**
 * Implementation of hook_preprocess_node()
 *
 * In case we are showing a node in colorbox and for some reason
 * our normal wrapper isn't being added
 *
 */
function atwork_comments_preprocess_node(&$variables){
  if (isset($variables['content']['comments']['comments']) && (!isset($variables['content']['comments']['comments']['#prefix']))) {
    $variables['content']['comments']['comments']['#prefix'] = '<div id="comment-wrapper-nid-' . $variables['nid'] . '">';
    $variables['content']['comments']['comments']['#suffix'] = '</div>';
  }
}

/*
 * Implementation of hook_comment_insert()
 *
 * Override the subscription setting where you are auto-subscribed to nodes you comment on
 */
function atwork_comments_comment_insert($comment) {
  if (!$comment->atwork_subscribe) {
    subscriptions_delete($GLOBALS['user']->uid, 'node', 'nid', $comment->nid);
  }
}


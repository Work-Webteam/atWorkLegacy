<?php

/*
 * Implementation of hook_form_alter()
 *
 * Allow the component name to be larger
 *
 * Control Emerging Leader voting form
 *
 * @TODO move to atwork_prem_awards module
 */
function atwork_webform_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'webform_component_edit_form') {
    $form['name']['#type'] = 'textarea';
    unset($form['name']['#maxlength']);
  }


  if ($form_id == 'webform_client_form_19843') {
  	
    // check if user voted
    global $user;
    
    $voted = db_select('webform_submissions', 'd')
      ->fields('d', array('uid'))
      ->condition('d.nid', 19843)
      ->condition('d.uid', $user->uid)
      ->execute()
      ->fetchAll();

    if ($voted) {
      //$form['actions']['submit']['#access'] = FALSE;
      //drupal_set_message('Thanks for voting!');
    }

    /*
     * Uncomment this when voting closes
     */
    //$form['actions']['submit']['#access'] = FALSE;

    
    //// This is used for the current years emergent leaders - code above is for last years.
    //foreach ($form['submitted']['finalists']['#options'] as $key => $data) {
    //  list($name, $video_id, $thumb_path, $caption) = explode('&&&', $data);
    //  $form['submitted']['finalists']['#options'][$key] = '<div class="video-finalist video-'. $key .'"><h3>'. $name .'</h3><a href="//www.youtube.com/embed/'. $video_id .'?wmode=transparent&amp;fs=1&amp;width=640&amp;height=385&amp;hl=en_US1&amp;iframe=true&amp;rel=0&amp;showinfo=0" class="colorbox-load" title="' . $caption . '" rel="Click to see ' . $name . '\'s video"><img src="/sites/default/files/webform/premieres_awards/2017/'. $thumb_path .'" alt = "Click me" /></a></div>';
    //}
  }
}





/**
 * Create a a block for the Comms team that they can use to randomize a winner for the emerging leaders quiz
 */
 /**
 * Implements hook_block_info().
 * Short term solution to display twitter block on front page.
 */
function atwork_webform_block_info(){
  //dpm($blocks);
  $blocks = array();
  $blocks['randomizer_block'] = array(
    'info' => t("Emerging Leaders Randomizer"),
    );
  return $blocks;
}

 /**
 * Implements hook_block_view().
 */
function atwork_webform_block_view($delta = '') {
  $block = array();

  switch($delta) {
    case ('randomizer_block'):
      drupal_add_js(drupal_get_path('module', 'atwork_webform').'/js_atwork_webform_ajax.js');
      drupal_add_js(drupal_get_path('module', 'atwork_webform').'/atwork_webform.js');
      $block['subject'] = '';
      $block['content'] = _atwork_webform_block_content();
      break;
  }
  
  return $block;
}

function _atwork_webform_block_content(){
  // Our current webform
  $nid = 19843;
  
  // First lets make a table of all contestants and their vote numbers
  // We need to get all of our votes cast per contestant key
  $votes = db_select('webform_submitted_data', 's')
  ->fields('s', array('no'))
  ->fields('s', array('data'))
  ->condition('s.nid', $nid)
  ->condition('s.no', '0', '!=')
  ->execute()
  ->fetchAll();
  
  // Count votes by key option for each nominee.
  $vote_count = array();
  foreach($votes as $key=>$value){
  	(isset($vote_count[$value->no])? $vote_count[$value->no] += ceil(3/$value->data) : $vote_count[$value->no] = ceil(3/$value->data));
  }
  
  //Get the form to match names to selection
  $webform = node_load($nid);
  
  //Pull out the names of the nominees
  $choices = array();

  // Get names of nominees
  $webform_question_text = $webform->webform['components'][1]['extra']['questions'];
  if(preg_match_all('/[123]\W<strong>(\w+ \w+)\./',$webform_question_text,$nominees)){
  	$choices_array= $nominees[1];
  }

  // Now make  table of emerging leaders and vote counts
  $output = '<div id="count-block">';
  $output .= '<table id="leaders-list" style="width:100%; border:1px solid black;" >';
  $output .= '<tr style="border:1px solid black; background-color:#E0EEEE;"><td style="border:1px solid black !important;"><h2>Emerging Leader</h2></td><td style="border:1px solid black !important;"><h2>Total Score</h2></td></tr>';
  
  // To color stripes
  $i = 1;
  foreach($choices_array as $key=>$value){   
    // Need to cast our key to an int to traverse arrays
    $key = (int)$key + 1;
    // pick our background color
    if($i & 1 ){
      $background = '#FFFFFF';
    } else {
      $background = '#E0EEEE';
    }
    if(isset($vote_count[$key]) || array_key_exists($key, $vote_count)){
      $output .= '<tr style="border:1px solid black; background-color:' . $background . ';"><td style="border:1px solid black !important;">' . $value . '</td><td style="border:1px solid black !important; background-color:' . $background . ';">' . $vote_count[$key] . '</td></tr>';
    } else {
      $output .= '<tr><td style="border:1px solid black !important; background-color:' . $background . ';">' . $value . '</td><td style="border:1px solid black !important; background-color:' . $background . ';">0</td></tr>';
    }
    $i++;
  }
  $output .= '</table>';


  // Find all users who voted:
  $voted = db_select('webform_submissions', 'd')
    ->fields('d', array('uid'))
    ->condition('d.nid', $nid)
    ->execute()
    ->fetchAll();

  // Add the table
  $output .= '<div id="randomizer_block">';
  // This button will be used to fire an Ajax function to choose a winner.
  $output .= '<button type="submit" id="randomize">Choose Winner</button></div>';
  $output .= '<input type="button" value="Show Voters List" id="contestant-button" />';
  $output .= '<table id="voter_list" >';
  $output .= '<tr style="border:1px solid black !important; background-color:#E0EEEE;"><th><h2>Voters:  </h2></th></tr>';
  
  // To color stripes
  $i = 1;
  // Create voters table
  foreach($voted as $key => $value){
    // pick our background color
    if($i & 1 ){
      $background = '#FFFFFF';
    } else {
      $background = '#E0EEEE';
    }
    $voter = user_load($value->uid);
    $output .= '<tr style="border:1px solid black !important; background-color:' . $background . ';"><td><a href="/user/' . $voter->uid . '">' .  $voter->field_gal_first_name['und'][0]['safe_value'] . ' ' . $voter->field_gal_last_name['und'][0]['safe_value'] . '</a></td></tr>';
    $i++;
  }
  $output .= '</table>';
  return $output;
} 

/**
 * Implements hook_menu();
 */
function atwork_webform_menu() {
    // this one has an access callback which was handy when it was a menu tab
    
    $items['random'] = array(
      'page callback' => 'atwork_webform_ajax_callback', // Render HTML.
      'page arguments' => array(1),
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
      'delivery callback' => 'atwork_webform_ajax',  // Magic goes here.
    );
  
    return $items;
  }
  
function atwork_webform_ajax_callback($var){
  // Find all users who voted:
  $voted = db_select('webform_submissions', 'd')
    ->fields('d', array('uid'))
    ->condition('d.nid', 19843)
    ->execute()
    ->fetchAll();

  // Get total # of voters 
  $total = count($voted);
  
  // Choose a winner:
  $winning_number = mt_rand(0,$total-1);
  
  // Winner is:
  $winner = $voted[$winning_number];
  $winning_user = user_load($winner->uid);
  
  // Return winners info
  $winner_name = $winning_user->field_gal_first_name['und'][0]['safe_value'] . " " . $winning_user->field_gal_last_name['und'][0]['safe_value'];
  
  if(isset($winning_user->field_image['und'][0]['uri'] )&& $winning_user->field_image['und'][0]['uri'] ){
    $picture_url = $winning_user->field_image['und'][0]['uri'];
  } else {
    global $base_url;    
    global $base_path;
    $picture_url = $base_path . 'default_images/default_profile220x220b_0.gif';
  }
  
  $picture_location = str_replace("public://", "", $picture_url);
  
  $winner_picture = '/sites/default/files/' . $picture_location; 
  
  $return_string = '<div id="winner_profile"><h1>The Winner is....</p><img src="' . $winner_picture . '" style="width:160px;height:200px;"><h2><a href="/user/' . $winning_user->uid . '">' . $winner_name .'</a></h2></div>';
  
  // Return image and winner name to js
  echo json_encode($return_string);
  
  // Stops themeing layer from interacting with this
  die();

  return;
}

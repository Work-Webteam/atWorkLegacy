<?php

function _atwork_sharepoint_clean($string) {
  if (strpos(' ' . $string, '#')) {
    $arr = explode('#', $string);
    return $arr[1];
  }
  return $string;
}

/**
 * Implements hook_menu();
 */
function atwork_sharepoint_menu() {
  $items['node/%/files'] = array(
    'title' => 'Group Files',
    'type' => MENU_CALLBACK,
    'page callback' => 'atwork_sharepoint_page_callback',
    'page arguments' => array(1),
    'access callback' => 'atwork_sharepoint_files_access',
    'access arguments' => array(1),
  );
  return $items;
}

function atwork_sharepoint_files_access($nid) {
  global $user;
  $node = node_load($nid);
  
  if (!$node) {
    return FALSE;
  }
  
  if (!og_is_group('node', $node)) {
    return FALSE;
  }
  
  $og_membership = og_get_membership('node', $node->nid, 'user', $user->uid);
  
  if (!$og_membership) {
    return FALSE;
  }
  
  return TRUE;
}

function atwork_sharepoint_page_callback($nid) {
  $node = node_load($nid);
  og_context('node', $node);
  
  sharepoint_load_includes();
  
  $list = field_get_items('node', $node, 'field_sharepoint_list');
  
  $endpoint = sharepoint_endpoint_load('pseci');
  $client = sharepoint_get_client($endpoint);
  
  $xml = '<GetListItems xmlns="http://schemas.microsoft.com/sharepoint/soap/"><listName>' . $list[0]['value'] . '</listName><rowLimit>10</rowLimit><queryOptions><QueryOptions><IncludeMandatoryColumns>TRUE</IncludeMandatoryColumns><ViewAttributes Scope="RecursiveAll" /></QueryOptions></queryOptions></GetListItems>';
  
  $result = sharepoint_call($client, "GetListItems", $xml);
  
  //dpm($result);
  
  $header = array(
    t('Filename'),
    t('Created By'),
    t('Last Modified By'),
    t('Operations'),
  );
  
  $rows = array();
  $files = array();
  
  if (isset($result['GetListItemsResult']['listitems']['data']['row'])) {
    foreach ($result['GetListItemsResult']['listitems']['data']['row'] as $file) {
      
      $file_info = array();
      
      if (_atwork_sharepoint_clean($file['!ows_FSObjType']) != 1) {
        $file_info['type'] = 'file';
        
        $metadata = array();
        $metadata_src = explode("\n", str_replace("\n\r", "\n", _atwork_sharepoint_clean($file['!ows_MetaInfo'])));

        foreach ($metadata_src as $line) {
          $line_arr = explode(':', $line);
          $metadata[$line_arr[0]] = $line_arr[1];
        }
        
        $author = str_replace("SR|IDIR\\\\", '', $metadata['vti_author']);
        
        $file_info['author'] = user_load_by_name(trim($author));

        $modifiedby = str_replace("SR|IDIR\\\\", '', $metadata['vti_modifiedby']);
        $file_info['modified_by'] = user_load_by_name(trim($modifiedby));
        
        $file_info['modified_date'] = format_date(strtotime($file['!ows_Modified']));
        
        $file_info['created_date'] = format_date(strtotime(_atwork_sharepoint_clean($file['!ows_Created_x0020_Date'])));
        
        $file_info['filename'] = $file['!ows_LinkFilename'];
        
        // determine the file's location
        // take off atwork-integration/ + list name + 1 for trailing slash
        $length_in_front = 19 + strlen($list[0]['value']) + 1;
        $loc = substr_replace(_atwork_sharepoint_clean($file['!ows_FileRef']), '', 0, $length_in_front);
        
        // take of forward slash + filename
        $length_in_back = 1 + strlen($file_info['filename']);
        $loc = substr_replace($loc, '', -$length_in_back);
        
        if ($loc) {
          if (strpos($loc, '/')) {
            $str = '';
            $folders = explode('/', $loc);
            foreach ($folders as $folder) {
              $str .= "['$folder']";
            }
            $str .= "['files']['" . $file_info['filename'] . "']";
            
            $result = eval("$files . $str = $file_info;");
            //dpm($result);
          }
          else {
            $files[$loc]['files'][$file_info['filename']] = $file_info;
          }
        }
        else {
          $files[$file_info['filename']] = $file_info;
        }
      }
      else {
        $file_info['type'] = 'folder';
        $file_info['filename'] = $file['!ows_LinkFilename'];
        
        // determine the file's location
        // take off atwork-integration/ + list name + 1 for trailing slash
        $length_in_front = 19 + strlen($list[0]['value']) + 1;
        $loc = substr_replace(_atwork_sharepoint_clean($file['!ows_FileRef']), '', 0, $length_in_front);
        
        // take of forward slash + filename
        $length_in_back = 1 + strlen($file_info['filename']);
        $loc = substr_replace($loc, '', -$length_in_back);
        
        if ($loc) {
          if (strpos($loc, '/')) {
            $str = '';
            $folders = explode('/', $loc);
            foreach ($folders as $folder) {
              $str .= "['$folder']['subfolders']";
            }
            $str .= "['" . $file_info['filename'] . "']";
            
            $result = eval("$files . $str = $file_info;");
            
          }
          else {
            $files[$loc]['subfolders'][$file_info['filename']] = $file_info;
          }
        }
        else {
          $files[$file_info['filename']] = $file_info;
        }
        
      }
    }
  }
  
  //dpm($files);
  
  foreach ($files as $filename => $file) {
    if ($file['type'] == 'file') {
      $rows[] = array(
        'name' => l($filename, 'https://bcps.gov.bc.ca/atwork-integration/' . $list[0]['value'] . '/' . $filename),
        'created' => theme('username', array('account' => $file['author'])) . ' ' . t('on') . ' ' . $file['created_date'],
        'modified' => theme('username', array('account' => $file['modified_by'])) . ' ' . t('on') . ' ' . $file['modified_date'],
        'operations' => 'coming soon?',
      );
    }
    else {
      $rows[] = array(
        'name' => $filename,
        'created' => '',
        'modified' => '',
        'operations' => 'coming soon?',
      );
      if (isset($file['files']) && $file['files']) {
        foreach ($file['files'] as $sub_filename => $sub_file) {
          $rows[] = array(
            'name' => '&nbsp;-' . l($sub_filename, 'https://bcps.gov.bc.ca/atwork-integration/' . $list[0]['value'] . '/' . $sub_filename),
            'created' => theme('username', array('account' => $sub_file['author'])) . ' ' . t('on') . ' ' . $sub_file['created_date'],
            'modified' => theme('username', array('account' => $sub_file['modified_by'])) . ' ' . t('on') . ' ' . $sub_file['modified_date'],
            'operations' => 'coming soon?',
          );
        }
      }
    }
  }
  
  drupal_set_title(t('Files'));
  
  $table_element = array(
    '#theme' => 'table',
    '#header' => $header,
    '#rows' => $rows,
    '#empty' =>t('No files have been uploaded.'),
  );
  
  return $table_element;
}
<?php

/*
 * Implementation of hook_views_pre_view()
 *
 *
 */
function atwork_blog_views_pre_view(&$view, &$display_id, &$args) {
  //Health-bent is causing issues as an argument so we need to deal with it
  if ($view->name == 'blogs' && $view->current_display == 'page') {
    if ($view->args) {
      if ($view->args[0] == 'health-bent') {
        $view->args[0] = 'Health-bent';
      }
      else {
        $view->args[0] = str_replace('-', ' ', $view->args);
      }

      $author = user_load_by_name($view->args[0]);
      if ($author) {
        $view->args[0] = $author->uid;
      }
      else {
        drupal_not_found();
      }
    }
  }
}

/**
 * Implements hook_form_alter();
 */
function atwork_blog_form_blog_node_form_alter(&$form, &$form_state) {

  // Handle fields that should not be accessible to regular users.
  if(!_atwork_is_admin()){
    $form['menu']['#access'] = FALSE;
    $form['og_group_ref']['#access'] = FALSE;
    $form['actions']['delete']['#access'] = FALSE;
    //Some tags are reserved for editors and admins only
    //References helper function in atwork_misc.module
    _atwork_hide_exec_tags($form);

  }
}



/*
 * Implementation of hook_node_view()
 *
 * Add next/previous blog links
 *
 * And add blogger profile to bottom of content
 *
 */
function atwork_blog_node_view($node, $view_mode, $langcode) {

  if ($node->type != 'blog' || $view_mode != 'full') {
    return;
  }

  $blogger_links = array();

  $author = user_load($node->uid);

  $prev_uid = db_select('node', 'n')
    ->condition('status', 1)
    ->condition('type', 'blog')
    ->condition('created', $node->created, '<')
    ->condition('uid', $node->uid)
    ->fields('n', array('nid'))
    ->orderBy('created', 'DESC')
    ->execute()
    ->fetchAssoc();

  if ($prev_uid) {
    $previous_link = '&lt; ' . l(t('Previous post'), 'node/' . $prev_uid['nid'] ) . t(' by this blogger');
    $blogger_links[] = '<span class="previous">' . $previous_link . '</span>';
  }

  $next_uid = db_select('node', 'n')
    ->condition('status', 1)
    ->condition('type', 'blog')
    ->condition('created', $node->created, '>')
    ->condition('uid', $node->uid)
    ->fields('n', array('nid'))
    ->orderBy('created', 'ASC')
    ->execute()
    ->fetchAssoc();

  if ($next_uid) {
    $next_link = l(t('Next post'), 'node/' . $next_uid['nid'] ) . t(' by this blogger ') . '&gt;';
    $blogger_links[] = '<span class="next">' . $next_link . '</span>';
  }

  if ($blogger_links) {
    $node->content['blogger_links'] = array(
      '#weight' => 110,
      '#markup' => '<div class="blogger-links">' . implode(' | ', $blogger_links) . '</div>',
    );
  }

  $blogger_profile = field_get_items('user', $author, 'field_blog_profile');
  $blogger_photo = field_get_items('user', $author, 'field_image');

  if ((isset($blogger_profile[0]['value']) && $blogger_profile[0]['value']) ||
      (isset($blogger_photo[0]['fid']) && $blogger_photo[0]['fid'])) {

    $output = '';
    // add photo
    if (isset($blogger_photo[0]['fid']) && $blogger_photo[0]['fid']) {
      $variables = array(
        'style_name' => 'blogger_photo',
        'path' => $blogger_photo[0]['uri'],
        'width' => $blogger_photo[0]['width'],
        'height' => $blogger_photo[0]['height'],
        'alt' => $blogger_photo[0]['alt'],
        'title' => $blogger_photo[0]['title'],
      );

      $output .= '<span class="blogger-photo crop">' . theme('image_style', $variables) . '</span>';
    }

    // add text
    if (isset($blogger_profile[0]['value']) && $blogger_profile[0]['value']) {
      $output .= '<span class="blogger-profile"><p>' . $blogger_profile[0]['value'] . '</p></span>';
    }


    $node->content['blogger_profile'] = array(
      '#weight' => 1,
      '#markup' => '<div id="blogger-profile">' . $output . '</div>',
    );
  }
}

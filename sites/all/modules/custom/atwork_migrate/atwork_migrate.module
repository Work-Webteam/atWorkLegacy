<?php


function atwork_migrate_menu() {
  $items['admin/config/migrate'] = array(
    'title' => t('Atwork Migration'), 
    'page callback' => 'drupal_get_form',
    'page arguments' => array('atwork_migrate_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'atwork_migrate.process.inc',
    'file path' => drupal_get_path('module', 'atwork_migrate'),
    'type' => MENU_NORMAL_ITEM,
  );
  
  return $items;
}

function atwork_migrate_form($form, &$form_state) {
  atwork_migrate_tester();
  $form['description'] = array(
    '#type' => 'item', 
    '#title' => t('Migrate our D6 database into D7'),
  );
  
  $form['type'] = array(
    '#type' => 'select',
  );
  
  $nid = 0;
  $result = db_query("SELECT nid FROM {node} WHERE type = 'wiki' LIMIT 1");
  $record = $result->fetchObject();
  
  // override
  //$record = FALSE;
  
  if ($record) {
    $form['type']['#description'] = t('Migration appears to be done. Run post-migration tasks?');
    $form['type']['#options'] = array(
      2 => 'Post Migration',
    );
  }
  else {
    $form['type']['#description'] = t('Migration has not been done. Start migration now?');
    $form['type']['#options'] = array( 
      1 => 'Migration',
    );
  }
  
  $form['submit'] = array(
    '#type' => 'submit', 
    '#value' => t('Go'),
  );
  
  return $form;
}

function atwork_migrate_form_submit($form, &$form_state) {
  if ($form_state['values']['type'] == 1) {
    $batch = atwork_migrate_batch();
  }
  elseif ($form_state['values']['type'] == 2) {
    $batch = atwork_migrate_post_batch();
  }
  batch_set($batch);
}

function atwork_migrate_batch() {
  $operations = array();
  $tables = _atwork_migrate_table_list();
  
//  $operations[] = array('atwork_migrate_prepare_batch', array());
//  
//  foreach ($tables as $table => $data) {
//    $operations[] = array('atwork_migrate_process_batch', array($table));
//  }
//  
//  $operations[] = array('atwork_migrate_image_fixes', array());
//  $operations[] = array('atwork_migrate_file_fixes', array());
//  $operations[] = array('atwork_migrate_remove_teaser_breaks', array());
//  $operations[] = array('atwork_migrate_convert_inline_polls', array());
//  $operations[] = array('atwork_migrate_clean_blogs', array());
//  $operations[] = array('atwork_migrate_save_ecards', array());
//  $operations[] = array('atwork_migrate_convert_videos', array());
//  $operations[] = array('atwork_migrate_convert_inline_videos', array());
  $operations[] = array('atwork_migrate_save_inline_videos', array());
  $operations[] = array('atwork_migrate_convert_sections', array());
  $operations[] = array('atwork_migrate_fix_wiki_images', array());
  $operations[] = array('atwork_migrate_fill_comment_revision', array());
  $operations[] = array('atwork_migrate_fill_auth_table', array());
  $operations[] = array('atwork_migrate_remove_inline_js', array());
  $operations[] = array('atwork_migrate_remove_dup_transcripts', array());
  $operations[] = array('atwork_migrate_export_wiki_html', array());
  
  $batch = array(
    'operations' => $operations, 
    'finished' => 'atwork_migrate_batch_finished',
    'title' => t('Migrating... '), 
    'init_message' => t('Migration is starting.'), 
    'progress_message' => t('Processed @current out of @total.'), 
    'error_message' => t('Migrating encountered an error.'),
    'file' => drupal_get_path('module', 'atwork_migrate') . '/atwork_migrate.process.inc',
  );
  
  // override
//  $batch['operations'] = array(
//    0 => array('atwork_migrate_process', array('content_field_classifieds_image')),
//  );
  
  return $batch;
}

function atwork_migrate_post_batch() {
  $operations = array();
  $tables = _atwork_migrate_table_list();
  
  $result = db_query("SELECT COUNT(nid) as num FROM {node} WHERE type = 'wiki'")->fetchObject();
  
  if (isset($result->num)) {
    for($i = 100; $i < ($result->num + 100); $i = $i + 100) {
      $operations[] = array('atwork_migrate_convert_wikis', array($i));
    }
  }
  
  db_query("UPDATE {atwork_auth} SET timestamp = 0");
  
  $result = db_query("SELECT COUNT(uid) as num FROM {atwork_auth}")->fetchObject();
  
  if (isset($result->num)) {
    for($i = 4000; $i < ($result->num + 4000); $i = $i + 4000) {
      $operations[] = array('atwork_migrate_fill_guids', array());
    }
  }
  
  $operations[] = array('atwork_migrate_clear_subscriptions', array());
  $operations[] = array('atwork_migrate_clear_poll_teasers', array());
  
  $batch = array(
    'operations' => $operations, 
    'finished' => 'atwork_migrate_batch_finished',
    'title' => t('Running post-migration tasks '), 
    'init_message' => t('Post-migration tasks are starting.'), 
    'progress_message' => t('Processed @current out of @total.'), 
    'error_message' => t('Migrating encountered an error.'),
  );
  
  return $batch;
}

function atwork_migrate_batch_finished($success, $results, $operations) {
  if ($success) {
    $message = t('Migration completed!');
    $message .= theme('item_list', array('items' => $results));
  }
  else {
    // An error occurred.
    $error_operation = reset($operations);
    $message = t('An error occurred while processing @operation with arguments : @args', array('@operation' => $error_operation[0], '@args' => print_r($error_operation[0], TRUE)));
  }
  drupal_set_message($message);
}

function atwork_migrate_clear_subscriptions(&$context) {
  $result = db_truncate('subscriptions_queue')->execute();
  $context['results'][] = 'Cleared subscriptions';
  $context['message'] = 'Clearing subscriptions';
}

function atwork_migrate_clear_poll_teasers(&$context) {
  $sql = "
    UPDATE {field_data_field_poll} p
    LEFT JOIN {field_data_body} b ON (p.entity_id = b.entity_id)
    SET b.body_summary = ''
    WHERE p.entity_id IS NOT NULL";
  
  db_query($sql);
  
  $sql = "
    UPDATE {field_data_field_poll} p
    LEFT JOIN {field_revision_body} b ON (p.entity_id = b.entity_id)
    SET b.body_summary = ''
    WHERE p.entity_id IS NOT NULL";
  
  db_query($sql);
  
  
  $context['results'][] = 'Cleared poll teasers';
  $context['message'] = 'Clearing poll teasers';
}

function atwork_migrate_convert_wikis($limit, &$context) {
  $wikis = array();
  
  if (($handle = fopen("/var/www/tools/mediawiki.csv", "r")) !== FALSE) {
    while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
        $wikis[] = $data;
    }
    fclose($handle);
  }
  
  foreach ($wikis as $num => &$wiki) {
    if ($num >= ($limit - 100) && $num <= $limit) {

      set_time_limit(10);
      // not sure how this happened >:|
      $wiki[1] = str_replace('https://gww.gov.bc.ca//', 'https://gww.gov.bc.ca/', $wiki[1]);


      $node = node_load($wiki[0]);
      $node->body['und'][0]['value'] = $wiki[1];
      $node->body['und'][0]['format'] = 'wiki';

      // some entries have no body - they need one or mediawiki won't save them
      if (!trim($node->body['und'][0]['value'])) {
        $node->body['und'][0]['value'] = $node->title;
        if (preg_match('/\((.*?)\)/', $node->title, $match)) {
          if ($match[1]) {
            $node->body['und'][0]['value'] = $match[1];
          }
        }
      }
      
      // fix image filenames
      // first check for syntax: [[Image:filename.jpg|100px]
      if (preg_match_all('/\[\[Image:(.*?)[\||\]\]]/', $node->body['und'][0]['value'], $matches)) {
        //dpm($matches);
        foreach ($matches[1] as $key => $filename) {
          $new_filename = str_replace(' ', '_', $filename);
          $new_filename = str_replace('%20', '_', $new_filename);
          $new_filename = ucwords($new_filename);
          
          $replacement = str_replace($filename, $new_filename, $matches[0][$key]);
          
          $node->body['und'][0]['value'] = str_replace($matches[0][$key], $replacement, $node->body['und'][0]['value']);
        }
      }
      
      node_save($node);
    }
  }
  
  $context['results'][] = 'Converted ' . $limit . ' wiki entries';
  $context['message'] = 'Converting wiki entries';
}

function atwork_migrate_fill_guids(&$context) {
  require_once(drupal_get_path('module', 'atwork_auth') . '/atwork_auth.pages.inc');
  $context['results'][] = atwork_auth_get_missing_guids();
  $context['message'] = 'Filling GUIDs';
}

function atwork_migrate_tester() {
//  _atwork_migrate_d6_database();
//  
//  $body_result = db_query("SELECT 
//                        r.body 
//                      FROM {node} n
//                      LEFT JOIN {node_revisions} r ON (n.vid = r.vid)
//                      WHERE n.nid = 7641
//                      LIMIT 1")->fetchObject();
//  dpm($body_result);
//  
//  db_set_active('default');
}

function atwork_migrate_init() {
  
  
}
<?php


/*
 * Implements hook_init()
 *
 * This is used to authenticate users after they have gone through Siteminder.
 * Uses $_SERVER['HTTP_SM_USER'] which is passed in from Siteminder after authentification.
 * We also check for Drush/RSS etc before we deny access - so they don't get caught
 * up in this.
 *
 * If the user does not check out at all - we completely deny access across the board.
 *
 */
function atwork_authorization_init() {

  // Check if we have an idir as expected.
  if (isset($_SERVER['HTTP_SM_USER'])) {
    // Get idir from $server - this can come in a few forms depending on Test or Prod.
    // We want this lowercase - as per standard.
    if (strpos($_SERVER['HTTP_SM_USER'], 'IDIR') !== false) {
      $sm_user = str_replace("idir\\", "", strtolower($_SERVER['HTTP_SM_USER']));
    } else {
      $sm_user = strtolower($_SERVER['HTTP_SM_USER']);
    }
  }

  // If we are already logged in, then we don't need to do this again.
  // Do need to check that our current user matches what we expect.
  if ( user_is_logged_in() && isset( $sm_user )) {
    // Get currently logged in user.
    global $user;
    // Check for a match.
    if($user->init == $sm_user ) {
      // User is properly signed in. End function.
      return;
    }
  }

  // If this is drush, eject.
  if(drupal_is_cli()) {
    return;
  }

  // rss.xml bypasses siteminder so can abort now.
  if ($_GET['q'] == 'rss.xml') {
    return;
  }

  // Don't do this for Apache - this is only for Telus servers.
  if (isset($_SERVER['USER'])) {
    if ($_SERVER['USER'] != 'apache' && !isset($_SERVER['HTTP_SM_USER'])) {
      // Nothing to do here.
      return;
    }
  }

  // Try to log the user in.
  $current_user = user_load_by_name($sm_user);
  if(isset($current_user->uid)) {
    $form_state['uid'] = $current_user->uid;
    // We have everything we need, now lets login.
    user_login_submit(array(), $form_state);
    return;
  }

  // If the user meets none of the criteria, they should not be on the site.
  drupal_access_denied();
}

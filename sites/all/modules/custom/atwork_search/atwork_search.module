<?php

/*
 * Implementation of hook_query_alter()
 *
 * Don't allow field_exclude_from_search to be shown on search
 */
function atwork_search_query_alter(&$query) {
  $is_search = FALSE;
  foreach ($query->getTables() as $table) {
    if ($table['table'] == 'search_index') {
      $is_search = TRUE;
    }
  }

  // disable on views
  if (isset($query->alterTags['views'])) {
    $is_search = FALSE;
  }

  if ($is_search) {
    $tables = $query->getTables();
    if (isset($tables['i']['table'])
      && isset($tables['n']['table'])
      && $tables['i']['table'] == 'search_index'
      && $tables['n']['table'] == 'node') {

      $or = db_or()->condition('efs.field_exclude_from_search_value', 0)->isNull('efs.field_exclude_from_search_value');

      $query->leftJoin('field_data_field_exclude_from_search', 'efs', '(efs.entity_id = n.nid)');
      $query->condition($or);
      $query->condition('n.type', 'multichoice', '<>');
      $query->condition('n.type', 'truefalse', '<>');
      $query->condition('n.type', 'poll', '<>');
      $query->condition('n.type', 'lsa_application', '<>');
      $query->condition('n.type', 'lsa_pin_application', '<>');
    }
  }
}

/*
 * Implementation of hook_form_alter()
 *
 * Edit the advanced search form
 *
 * Remove label from search block
 */
function atwork_search_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id == 'search_form') {
    if (isset($form['advanced'])) {
      unset($form['advanced']['type']['#options']['page']);
      unset($form['advanced']['type']['#options']['multichoice']);
      unset($form['advanced']['type']['#options']['poll']);
      unset($form['advanced']['type']['#options']['truefalse']);
      unset($form['advanced']['type']['#options']['webform']);
      unset($form['advanced']['type']['#options']['lsa_application']);
      unset($form['advanced']['type']['#options']['image']);
      unset($form['advanced']['type']['#options']['lsa_pin_application']);

      if(isset($form['advanced']['type']['#options']['forum'])){
        $form['advanced']['type']['#options']['forum'] = 'Forum topic';
      }
      if(isset($form['advanced']['type']['#options']['section_page'])){
        $form['advanced']['type']['#options']['section_page'] = 'Page';
      }
      if(isset($form['advanced']['type']['#options']['question'])){
        $form['advanced']['type']['#options']['question'] = 'Q & A';
      }
    }
  }

  if($form_id == 'search_block_form' && drupal_is_front_page()) {
    drupal_add_js(drupal_get_path('module', 'atwork_search') . '/js/atwork_search.js');
  }
}

/*
 * Implementation of hook_preprocess_search_result()
 *
 * Combine a few content types and call them "Information Pages"
 */
function atwork_search_preprocess_search_result(&$variables) {
  if (!isset($variables['result']['type'])) {
    return;
  }
  if (in_array($variables['result']['type'], array('Background', 'Section', 'Section Background'))) {
    $variables['result']['type'] = t('Information Page');
  }


  $date = format_date($variables['result']['node']->created, 'medium');

  $variables['info'] = $variables['result']['type'] . ' - ' . $variables['info_split']['user'] . ' - ' . $date;

  if (isset($variables['info_split']['comment']) && $variables['info_split']['comment']) {
    $variables['info'] .= ' - ' . $variables['info_split']['comment'];
  }
}

/*
 * Implementation of hook_ranking()
 *
 * Boost the ranking of the page content type
 */
function atwork_search_ranking() {
  return array(
    'page_boost_search' => array(
      'title' => t('Background Page Boost'),
      'arguments' => array(':page_boost' => 'page'),
      'score' => ' FIND_IN_SET(n.type, :page_boost)',
    ),
  );
}

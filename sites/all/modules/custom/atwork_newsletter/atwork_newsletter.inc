<?php
/**
 *    The following variables are available:
 *    - $toc Table of content, if it exists, as generated by the function
 *    theme_scs_toc() or your own.
 *    - $nodes Array of built selected nodes, ready to be outputed with the
 *    render() function.
 *    - $comments Array of comment nid's, ready to be loaded ant then output
 *    - $notes String that has bullet points for the notes section.
 *    - $didYouKnow contains any text input from form.
 *
 *    @return array
 */

function atwork_newsletter_create_render_arrays($nodes, $comments, $notes, $did_you_know){
	$atwork_base_url = $GLOBALS['base_url'];
	$comment = NULL;
	
	if($comments !== 'none') {
		// Load Comment Object
		$comment = comment_load($comments);
		
		// Retrieve Username from UID and place in comments array
		$user = user_load($comment->uid);
		$comment->name = $user->field_display_name['und'][0]['value'];
		$comment->comment_body['und'][0]['formatted'] = $comment->comment_body['und'][0]['value'];

		// Add in link to parent article
		$parent = node_load($comment->nid);
		$comment->parent_url = drupal_get_path_alias('node/' . $comment->nid);
	} 
	
	// If a comment/note/did you know were NOT entered, our value should be "none" - we may want to account for this possibility here or in the template when deciding how exactly to theme in these instances
	$atwork_newsletter_render_array = array(
			"comments" => $comment,
			"take_note" => $notes,
			"did_you_know" => $did_you_know,
			"nodes" => array(),
	);
	
	//Directory/image locations on prod
	$articlesDir = '/sites/default/files/';
	$newsletterDir = '/var/www/html-8888/mem_fs/images/';
	$imgSrc = NULL;
	$imgDest = NULL;
	$error = NULL;
	foreach($nodes as $node) {
		//Keep track if no images are copied to img server for newsletter and inform user.
		$imgFound = FALSE;
		//Check to see if Article/Blog has a valid picture.
		if(isset($node->field_image['und']) && $node->field_image['und']){
			foreach($node->field_image['und'] as $newsletterImg) {
				$imgSrc = $articlesDir . substr($newsletterImg['uri'], 9);
				$imgDest = $newsletterDir . $newsletterImg['filename'];
				if(file_exists(DRUPAL_ROOT . $imgSrc)) {
				  	//Check image size first
				    if(array_search($node->nid,array_keys($nodes)) == 0) {
				    	//Feature spot image
				    	if(($newsletterImg['width'] <= '800' && $newsletterImg['width'] >= '700' )
				    		&& ($newsletterImg['height'] <= '300' && $newsletterImg['height'] >= '200' )) {
				    		if(!file_exists($imgDest)) {
				    			if(copy(DRUPAL_ROOT . $imgSrc, $imgDest)) {
				    			    $node->newsletter_image[] = array_search($newsletterImg, $node->field_image['und']);
				    				$imgFound = TRUE;
				    			}
				    			chmod($imgDest,0670);
				    		}
						    if(file_exists($imgDest)) {
						   	  //Verify file is now in memfs directory
				    		  $node->newsletter_image[] = array_search($newsletterImg, $node->field_image['und']);
						   	  $imgFound = TRUE;
						    }
				    	} else if(strpos($newsletterImg['filename'],'775') && (($newsletterImg['width'] > '700')&&($newsletterImg['height'] > '200'))) {
				    		if(!file_exists($imgDest)) {
				    			if(copy(DRUPAL_ROOT . $imgSrc, $imgDest)) {
				    				$node->newsletter_image[] = array_search($newsletterImg, $node->field_image['und']);
				    				$imgFound = TRUE;
				    			}
				    			chmod($imgDest,0670);
				    		}
				    		if(file_exists($imgDest)) {
				    			//Verify file is now in memfs directory
				    		    $node->newsletter_image[] = array_search($newsletterImg, $node->field_image['und']);
				    			$imgFound = TRUE;
				    		}
				    	}
				    } else {
				    	//Regular News article
				    	if(($newsletterImg['width'] <= '600' && $newsletterImg['width'] >= '200' ) 
				    		&& ($newsletterImg['height'] <= '600' && $newsletterImg['height'] >= '200' )) {
				    		if(!file_exists($imgDest)) {
				    			if(copy(DRUPAL_ROOT . $imgSrc, $imgDest)) {
				    				$node->newsletter_image[] = array_search($newsletterImg, $node->field_image['und']);
				    				$imgFound = TRUE;
				    			}
				    			chmod($imgDest,0670);
				    		}
						    if(file_exists($imgDest)) {
						   	  //Verify file is now in memfs directory
				    		  $node->newsletter_image[] = array_search($newsletterImg, $node->field_image['und']);
						   	  $imgFound = TRUE;
						    }
				    		
				    	} else if(strpos($newsletterImg['filename'],'382') && (($newsletterImg['width'] > '200')&&($newsletterImg['height'] > '200'))) {
				    		if(!file_exists($imgDest)) {
				    			if(copy(DRUPAL_ROOT . $imgSrc, $imgDest)) {
				    				$node->newsletter_image[] = array_search($newsletterImg, $node->field_image['und']);
				    				$imgFound = TRUE;
				    			}
				    			chmod($imgDest,0670);
				    		}
						    if(file_exists($imgDest)) {
						   	  //Verify file is now in memfs directory
				    		  $node->newsletter_image[] = array_search($newsletterImg, $node->field_image['und']);
						   	  $imgFound = TRUE;
						    }
				    	}
				    }
				}
			}
	        if(!$imgFound) {
	        	$node->field_image['und'][0]['uri'] = '';
	        	$node->field_image['und'][1]['uri'] = '';
	        }
		}
		// Image couldn't be transferred to/found in newsletter image folder. Inform user.
		if(!$imgFound && $node->type != 'blog') {
			$error .= "The image corresponding to <strong>" . $node->title . "</strong> could not be found.<br>";
		}
		
		//Update img path & then add node to render array.
		$atwork_newsletter_render_array['nodes'][$node->nid] = $node;
	} 
	if($error) {
	  drupal_set_message($error . "<br>Please check the images in the article to make sure they are uploaded in this order:<br>"
			. "&emsp;Small 382 X 775 px<br>"
			. "&emsp;Medium 250 X 775 px<br>"
			. "&emsp;Large 250 X 960 px<br>"
			. "The width must be included in the image title (for example \"Capital_Park_382x250\")", 'warning');
	}
	return($atwork_newsletter_render_array);
}
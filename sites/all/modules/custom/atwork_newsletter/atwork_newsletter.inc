<?php
/**
 *    The following variables are available:
 *    - $toc Table of content, if it exists, as generated by the function
 *    theme_scs_toc() or your own.
 *    - $nodes Array of built selected nodes, ready to be outputed with the
 *    render() function.
 *    - $comments Array of comment nid's, ready to be loaded ant then output
 *    - $notes String that has bullet points for the notes section.
 *    - $didYouKnow contains any text input from form.
 *
 *    @return array
 */

function atwork_newsletter_create_render_arrays($nodes, $comments, $notes, $did_you_know){
	$atwork_base_url = $GLOBALS['base_url'];
	
	// Replace this with logic that converts the $nodes array to a renderable array with all necessary content for the newsletter.
	// There is a possibility that the node will not have a usable image - if this is the case should we put in a default to avoid error?
	
	// Load Comments for rendering (and maybe put everything into an array?)
	if($comments !== 'none') {
		// Load Comment Object
		$comments = comment_load($comments);
		
		// Retrieve Username from UID and place in commens array
		$user = user_load($comments->uid);
		$comments->name = $user->field_display_name['und'][0]['value'];
		
		// Trim comment body for length and make it format nicely.
		if(strlen($comments->comment_body['und'][0]['value']) > 240) {
			$comments->comment_body['und'][0]['formatted'] = substr($comments->comment_body['und'][0]['value'],0,240);
			
			if(!preg_match('[A-Za-z]', substr($comments->comment_body['und'][0]['formatted'],-1,-2))) {
				$comments->comment_body['und'][0]['formatted'] = substr($comments->comment_body['und'][0]['formatted'],0,-2);
			}
			
			$comments->comment_body['und'][0]['formatted'] = $comments->comment_body['und'][0]['formatted']. '...';
		}
		
	} else {
		$comments = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc volutpat eros et arcu blandit, a malesuada metus luctus. Aenean euismod volutpat enim vitae dignissim.";
	}
	
	if($notes['value'] !== '') {
		//Add in the call to action link for take note.
		if(strpos($notes['value'], '<ul>')) {
			$notes['value'] = str_replace('</li>', ' <a href="https://gww.gov.bc.ca" style="color:#3200C5;">Call to action </a></li>', $notes['value']);
		} else {
			$notes['value'] = str_replace('</p>',' <a href="https://gww.gov.bc.ca" style="color:#3200C5;">Call to action </a></p>', $notes['value']);
		}
	} else {
		$notes['value'] = '<ul style="font-family: Calibri,sans-serif; font-size:11pt; color:#000000; margin-top: 10px; margin-right: 10px; margin-bottom: 20px;">'
				. '<li style="margin-left: 5px;">Item One <a style="color:#3200C5;" href="https://gww.gov.bc.ca"> Call to action </a></li>'
						. '<li style="margin-left: 5px;">Item two <a style="color:#3200C5;" href="https://gww.gov.bc.ca"> Call to action </a></li>'
								. '<li style="margin-left: 5px;">Item three <a style="color:#3200C5;" href="https://gww.gov.bc.ca"> Call to action </a></li>'
										. '</ul></td>';
	}
	
	if($did_you_know['value'] === '') {
		$did_you_know['value'] = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc volutpat eros et arcu blandit, a malesuada metus luctus. Aenean euismod volutpat enim vitae dignissim.'
				. ' <a href="https://gww.gov.bc.ca" style="color:#3200C5;">Call to action </a></li>';
	} else {
		$did_you_know['value']= str_replace('</p>',' <a href="https://gww.gov.bc.ca" style="color:#3200C5;">Call to action </a></p>', $did_you_know['value']);
	}
	
	// If a comment/note/did you know were NOT entered, our value should be "none" - we may want to account for this possibility here or in the template when deciding how exactly to theme in these instances
	$atwork_newsletter_render_array = array(
			"comments" => $comments,
			"take_note" => $notes,
			"did_you_know" => $did_you_know,
			"nodes" => array(),
	);
	
	//Directory/image locations on prod
	$articlesDir = '/sites/default/files/';
	$newsletterDir = '/var/www/html-8888/mem_fs/images/';
	$imgSrc = NULL;
	$imgDest = NULL;

	foreach($nodes as $node) {
		//Keep track if no images are copied to img server for newsletter and inform user.
		$imgFound = FALSE;
		
		//Check to see if Article/Blog has a valid picture.
		foreach($node['body']['#object']->field_image['und'] as $newsletterImg) {
			//$imgSrc = DRUPAL_ROOT . $articlesDir . substr($newsletterImg['uri'], 9);
			//$imgDest = DRUPAL_ROOT . $newsletterDir . $newsletterImg['filename'];
			$imgSrc = $articlesDir . substr($newsletterImg['uri'], 9);
			$imgDest = $newsletterDir . $newsletterImg['filename'];
			if(file_exists(DRUPAL_ROOT . $imgSrc)) {
				// Either this is the first article and we grab the larger 775 image,
				// or this is one of the regular articles and we take the smaller 382 image.
				if(((array_search($node['body']['#object']->nid,array_keys($nodes)) == 0) && strpos($newsletterImg['filename'], '775'))
						|| ((array_search($node['body']['#object']->nid,array_keys($nodes)) != 0) && strpos($newsletterImg['filename'], '382'))){
							
							//Pass image to the newsletter image folder.
							if(!file_exists($imgDest)) {
								if(copy(DRUPAL_ROOT . $imgSrc, $imgDest)) {
									$imgFound = TRUE;
								}
								chmod($imgDest,0670);
							}
							if(file_exists($imgDest)) {
								$imgFound = TRUE;
							}
				}
				
			} else {
				
				//Placeholder image
				$node['body']['#object']->field_image['und'][0]['uri'] = DRUPAL_ROOT . '/html-8888/mem_fs/images/image-not-found.jpg';
				
			}
		}
		// Image couldn't be transferred to/found in newsletter image folder. Inform user.
		if(!$imgFound && $node['body']['#object']->type != 'blog') {
			//if(!$imgFound && $node['body']['#object']->type != 'blog') {
			drupal_set_message("The image corresponding to " . $node['body']['#object']->title . " could not transferred automatically. The image for this article will need to be transferred manually.", 'warning');
		}
		
		//Update img path & then add node to render array.
		//$node['body']['#object']->field_image['und'][0]['uri'] = $atwork_base_url . $imgDest;
		$atwork_newsletter_render_array['nodes'][$node['body']['#object']->nid] = $node;

	}
	return($atwork_newsletter_render_array);
}


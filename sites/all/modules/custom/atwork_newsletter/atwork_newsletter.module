<?php


/**
 * Implements hook_theme_registry
 *
 * We need to intercept the theme for the simple news content selector
 * This allows us to theme content ourselve prior to any rendering, without hacking the default .tpl in the contrib module.
 * 
 * @param array $theme_registry
 */
function atwork_newsletter_theme_registry_alter(&$theme_registry){
  // We are overwriting the theme registry, redirecting functions to our own template.
  $theme_registry['scs_newsletter']['template'] = 'sites/all/themes/atwork_zen/templates/scs-newsletter';
  $theme_registry['scs_newsletter']['file'] = 'atwork_newsletter.theme.inc';
  $theme_registry['scs_newsletter']['theme path'] = 'sites/all/modules/custom/atwork_newsletter';
  //$theme_registry['scs_newsletter']['includes'] = '';
  $theme_registry['scs_newsletter']['includes'][] = 'sites/all/modules/custom/atwork_newsletter/atwork_newsletter.theme.inc';
  // We may need to do some preprocessing, so add our custom function to the list. This function exists in atwork_newsletter.inc
  $theme_registry['scs_newsletter']['preprocess functions'][] = 'template_preprocess_atwork_newsletter';
}

/**
 * Implements hook_form_alter().
 * Hook the form so we can take the data from comments and notes section of the form_state and commit it to the form.
 */
function atwork_newsletter_form_node_form_alter(&$form, &$form_state, $form_id) {
  // Check that we are creating a newsletter and that we come from the
  // admin/content/node
  if (!empty($form['#node_edit_form']) && in_array($form['type']['#value'], simplenews_get_content_types()) && isset($form_state['input']['nodes'])) {
    $nodes = node_load_multiple(array_keys($form_state['input']['nodes']));
    
    foreach($nodes as $node) {
      if(isset($form_state['input']['nodes'][$node->nid]['view_mode'])){	
        $node->scs_view_mode = $form_state['input']['nodes'][$node->nid]['view_mode'];
      } else {
        $node->scs_view_mode = 'simplenews_content_selection';
      }
    }

    // Now rebuild the array from scs, this puts the variables into the body field (using our theme)
      $form['body']['und'][0]['#default_value'] = theme('scs_newsletter', array(
        'nodes' => $nodes,
        'toc' => empty($form_state['input']['scs_toc']) ? FALSE : TRUE,
        'comment' => $form_state['input']['cid'],
        'notes' => $form_state['input']['take_note'],
        'did_you_know' => $form_state['input']['did_you_know'],
      ));
  }
}

/**
 * Implements hook_theme()
 * Here we are telling the theme that it should expect 4 variables rather than two, and are forcing it to use the template in the atwork-zen path rather than its own.
 */
function atwork_newsletter_theme() {
  return array(
    'scs_newsletter' => array(
      'variables' => array('nodes' => array(), 'toc' => FALSE, 'comments' => array(), 'notes' => array(), 'did_you_know' => array()),
      'template' => '/sites/all/themes/atwork-zen/templates/scs-newsletter',
      'file' => 'atwork_newsletter.theme.inc',
    ),
  );
}

/**
 * Implements hook_form_alter()
 * We pull information (such as CID, and some text fields) and place them into $form.
 */ 
function atwork_newsletter_views_bulk_operations_form_alter(&$form, &$form_state, $vbo){
  if($form['#form_id'] == 'views_form_newsletter_creation_page'){
  
  //Place submit button at bottom of form
  $form['select']['#weight'] = '100';
  
    // We want a text field to add a comment ID
    $form['cid'] = array(
      '#type'=>'textfield',
      '#title' => t('Comment CID'),
      '#default_value' => t('none'),
      '#size' => 60,
      '#maxlength' => 64,
      '#description' => t("Add the CID of the comment you would like to appear in the newsletter. The CID can be found at the end of the comments URL (ex. #comment-42119). <br />NOTE: Enter only the number of the comment (ex 42119 from the previous example)"),
    );
    
    // Spot for "Take Note"
    $form['take_note'] = array(
      '#type' => 'text_format', // gives us ckeditor functionality
      '#title' => t('Take Note'),
      '#default_value' => t(''),
      '#format' => NULL,
      '#description' => t('Add in Take Note bulleted list, or leave as blank if this is not part of the newsletter'),
    );
    
    // Spot for "Did You Know?"
    $form['did_you_know'] = array(
      '#type' => 'text_format',
      '#title' => t('Did You Know?'),
      '#default_value' => t(''),
      '#format' => NULL,
      '#description' => t("Add in 'Did you Know?' text, or leave blank if this is not part of the newsletter"),
    );
<<<<<<< HEAD

=======
>>>>>>> 246fd9dcd4df17719b6c5dda6a62f0d86f6a6c38

    // Add our own validation
    if((isset($form['select']['action::scs_views_create_newsletter_action']['#validate'])) &&
    (is_array($form['select']['action::scs_views_create_newsletter_action']['#validate']))) {
	  array_unshift($form['select']['action::scs_views_create_newsletter_action']['#validate'], 'atwork_newsletter_validate');
	} else {
	  $form['select']['action::scs_views_create_newsletter_action']['#validate'] = 'atwork_newsletter_validate';
	}
	
	// Add our own submit handler
	if((isset($form['select']['action::scs_views_create_newsletter_action']['#submit'])) &&
    (is_array($form['select']['action::scs_views_create_newsletter_action']['#submit']))) {
	  array_unshift($form['select']['action::scs_views_create_newsletter_action']['#submit'], 'atwork_newsletter_submit');
	} else {
	  $form['select']['action::scs_views_create_newsletter_action']['#submit'] = 'atwork_newsletter_submit';
	}
  }
}

/**
 * Implements form validation for newsletter creation module
 **/
function atwork_newsletter_validate(&$form, &$form_state){
  // Check if user input is a valid. If not, set error message (drupal_set_message) and return FALSE
  // Validate Comment(s)
  if($form['cid']['#value'] !== 'none') {
    if(!is_numeric($form['cid']['#value']) || !is_object(comment_load($form['cid']['#value']))) {
      drupal_set_message("Please enter a valid Comment ID");
      return false;
    }
  }   
  return true;
}
  
function atwork_newsletter_submit(&$form, &$form_state){
  return;
}
